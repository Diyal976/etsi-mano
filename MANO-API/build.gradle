plugins {
	id 'war'
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}


repositories {

	maven {
		url 'http://repo.spring.io/plugins-release/'
		url 'https://repository.jboss.org/maven2/'
		url 'https://maven.repository.redhat.com/ga/'
	}

	mavenCentral()
}

sourceSets {
	integrationTests {
		java {
			srcDir file("src/test/integration")
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
		}
	}
}

configurations {
	integrationTestsCompile.extendsFrom testCompile
	integrationTestsRuntime.extendsFrom testRuntime
}

task integrationTests(type: Test) {
	testClassesDirs = sourceSets.integrationTests.output.classesDirs
	classpath = sourceSets.integrationTests.runtimeClasspath
	outputs.upToDateWhen { false }
}

group = 'com.ubiqube'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


dependencies {
	testImplementation('org.junit.jupiter:junit-jupiter:5.5.0')
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'commons-jxpath', name: 'commons-jxpath', version: '1.3'

	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.28'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'
	compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4', classifier: 'jdk15'
	compile group: "com.github.fge", name: "json-patch", version: '1.9'

	compile group: 'io.swagger.core.v3', name: 'swagger-jaxrs2', version: '2.0.8'
	compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.22'

	compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.5.3'

	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-hateoas")
}

springBoot {
	mainClassName = 'com.ubiqube.etsi.mano.config.ServletInitializer';
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/src/test/resources"
}
processTestResources.dependsOn copyTestResources
